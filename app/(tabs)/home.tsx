import React, { useEffect, useState } from 'react'; import { View, Text, StyleSheet, ActivityIndicator, Pressable, Platform } from 'react-native'; import { Tabs, Slot } from 'expo-router'; import { SafeAreaProvider } from 'react-native-safe-area-context'; import { MotiView, MotiText } from 'moti'; import { Ionicons } from '@expo/vector-icons';

import { HapticTab } from '@/components/HapticTab'; import { IconSymbol } from '@/components/ui/IconSymbol'; import TabBarBackground from '@/components/ui/TabBarBackground'; import { Colors } from '@/constants/Colors'; import { useColorScheme } from '@/hooks/useColorScheme';

export default function Layout() { const [isReady, setIsReady] = useState(false); const [pressed, setPressed] = useState(false); const colorScheme = useColorScheme();

useEffect(() => { const init = async () => { await new Promise(resolve => setTimeout(resolve, 1500)); setIsReady(true); }; init(); }, []);

if (!isReady) { return ( <View style={styles.loadingContainer}> <Text style={styles.loadingText}>Carregando o Rendy...</Text> <ActivityIndicator size="large" color="#0ff" /> </View> ); }

return ( <SafeAreaProvider> <View style={styles.container}> <MotiView from={{ scale: 0.5, opacity: 0 }} animate={{ scale: 1, opacity: 1 }} transition={{ type: 'spring', damping: 10, mass: 1 }} style={styles.card} > <MotiText from={{ opacity: 0, translateY: -20 }} animate={{ opacity: 1, translateY: 0 }} transition={{ delay: 300 }} style={styles.title} > Bem-vindo ao Rendy </MotiText> <Pressable onPress={() => setPressed(!pressed)} style={styles.button}> <Text style={styles.buttonText}> {pressed ? 'Solte para sonhar' : 'Toque para transformar'} </Text> </Pressable> </MotiView> </View> <Tabs screenOptions={{ tabBarActiveTintColor: Colors[colorScheme ?? 'light'].tint, tabBarInactiveTintColor: '#888', headerShown: false, tabBarButton: props => <HapticTab {...props} />, // Ensure custom tab button renders correctly tabBarBackground: () => <TabBarBackground />, // Ensure tab bar background renders correctly tabBarStyle: Platform.select({ ios: { position: 'absolute' }, default: { backgroundColor: '#000', borderTopWidth: 0, }, }), }} > <Tabs.Screen name="index" options={{ title: 'Home', tabBarIcon: ({ color }) => <IconSymbol size={28} name="house.fill" color={color} />, }} /> <Tabs.Screen name="explore" options={{ title: 'Explore', tabBarIcon: ({ color }) => <IconSymbol size={28} name="paperplane.fill" color={color} />, }} /> <Tabs.Screen name="home" options={{ title: 'InÃ­cio', tabBarIcon: ({ color, size }) => ( <Ionicons name="home" size={size ?? 24} color={color} /> ), }} /> </Tabs> <Slot /> </SafeAreaProvider> ); }

const styles = StyleSheet.create({ loadingContainer: { flex: 1, backgroundColor: '#000', justifyContent: 'center', alignItems: 'center', }, loadingText: { color: '#0ff', fontSize: 18, fontWeight: 'bold', marginBottom: 20, }, container: { backgroundColor: '#000', alignItems: 'center', justifyContent: 'center', padding: 20, }, card: { backgroundColor: '#222', borderRadius: 20, padding: 30, alignItems: 'center', shadowColor: '#fff', shadowOffset: { width: 0, height: 6 }, shadowOpacity: 0.3, shadowRadius: 10, }, title: { fontSize: 24, color: '#fff', fontWeight: '600', marginBottom: 20, }, button: { backgroundColor: '#0ff', paddingHorizontal: 20, paddingVertical: 12, borderRadius: 12, }, buttonText: { color: '#000', fontWeight: 'bold', fontSize: 16, }, });

                                	             	  	                        	                                                                                                                                                                                              
